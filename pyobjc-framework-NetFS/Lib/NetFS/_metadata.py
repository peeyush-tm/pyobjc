# This file is generated by objective.metadata
#
# Last update: Mon Aug  3 13:19:31 2015

import objc, sys

if sys.maxsize > 2 ** 32:
    def sel32or64(a, b): return b
else:
    def sel32or64(a, b): return a
if sys.byteorder == 'little':
    def littleOrBig(a, b): return a
else:
    def littleOrBig(a, b): return b

misc = {
}
constants = '''$$'''
enums = '''$ENETFSACCOUNTRESTRICTED@-5999$ENETFSNOAUTHMECHSUPP@-5997$ENETFSNOPROTOVERSSUPP@-5996$ENETFSNOSHARESAVAIL@-5998$ENETFSPWDNEEDSCHANGE@-5045$ENETFSPWDPOLICY@-5046$'''
misc.update({'kNetFSMountPathKey': b'MountPath', 'kNAUIOptionNoUI': b'NoUI', 'kNetFSServerDisplayNameKey': b'ServerDisplayName', 'kNetFSAuthorityParamsKey': b'AuthorityParams', 'kNetFSMountFlagsKey': b'MountFlags', 'kNetFSSupportsKerberosKey': b'SupportsKerberos', 'kNetFSMountedMultiUserKey': b'MountedMultiUser', 'kNetFSHostKey': b'Host', 'kNetFSConnectedAsUserKey': b'MountedByUser', 'kNetFSHasPasswordKey': b'HasPassword', 'kNetFSSupportsGuestKey': b'SupportsGuest', 'kNetFSAlreadyMountedKey': b'AlreadyMounted', 'kNAUIOptionAllowUI': b'AllowUI', 'kNetFSMechTypesSupportedKey': b'MechTypesSupported', 'kNetFSMountedByUserKey': b'MountedByUser', 'kNetFSMountedWithAuthenticationInfoKey': b'MountedWithAuthenticationInfo', 'kNetFSAuthenticationInfoKey': b'AuthenticationInfo', 'kNetFSNoMountAuthenticationKey': b'NoMountAuthentication', 'kNetFSPrinterShareKey': b'PrinterShare', 'kNetFSUseKerberosKey': b'Kerberos', 'kNetFSMountAtMountDirKey': b'MountAtMountDir', 'kNAUIOptionForceUI': b'ForceUI', 'kNetFSGetAccessRightsKey': b'GetAccessRights', 'kNetFSPasswordKey': b'Password', 'kNetFSMountedByKerberosKey': b'MountedByKerberos', 'kNetFSSchemeKey': b'Scheme', 'kNetFSConnectedMultiUserKey': b'ConnectedMultiUser', 'kNetFSAccessRightsKey': b'AccessRights', 'kNetFSMountedByGuestKey': b'MountedByGuest', 'kNetFSSoftMountKey': b'SoftMount', 'kNetFSChangePasswordKey': b'ChangePassword', 'kNetFSUseGuestKey': b'Guest', 'kNetFSUseAuthenticationInfoKey': b'UseAuthenticationInfo', 'kNetFSPathKey': b'Path', 'kNetFSSupportsChangePasswordKey': b'SupportsChangePassword', 'kNetFSNoUserPreferencesKey': b'NoUserPreferences', 'kNetFSForceNewSessionKey': b'ForceNewSession', 'kNAUIOptionKey': b'UIOption', 'kNetFSConnectedAsGuestKey': b'MountedByGuest', 'kNetFSConnectedWithAuthenticationInfoKey': b'ConnectedWithAuthenticationInfo', 'kNetFSDisplayNameKey': b'DisplayName', 'kNetFSAlternatePortKey': b'AlternatePort', 'kNetFSAllowLoopbackKey': b'AllowLoopback', 'kNetFSMountedURLKey': b'MountedURL', 'kNetFSGuestOnlyKey': b'GuestOnly', 'kNetFSAllowSubMountsKey': b'AllowSubMounts', 'kNetFSUserNameKey': b'UserName', 'kNetFSIsHiddenKey': b'IsHidden'})
functions={'NetFSMountURLProbe': (b'^{__CFString=}^{__CFString=}',), 'NetFSMountURLAsync': (b'i^{__CFURL=}^{__CFURL=}^{__CFString=}^{__CFString=}^{__CFDictionary=}^{__CFDictionary=}^^v^{dispatch_queue_s=}@?', '', {'arguments': {8: {'callable': {'retval': {'type': b'v'}, 'arguments': {0: {'type': '^v'}, 1: {'type': 'i'}, 2: {'type': '^v'}, 3: {'type': '@'}}}}, 6: {'type_modifier': 'o'}}}), 'NetFSMountURLSync': (b'i^{__CFURL=}^{__CFURL=}^{__CFString=}^{__CFString=}^{__CFDictionary=}^{__CFDictionary=}^^{__CFArray=}', '', {'arguments': {6: {'type_modifier': 'o'}}}), 'NetFSMountURLCancel': (b'i^v',), 'NetFSCopyURLForRemountingVolume': (b'^{__CFURL=}^{__CFURL=}', '', {'retval': {'already_cfretained': True}}), 'NetFSCFStringtoCString': (b'^t^{__CFString=}', '', {'retval': {'c_array_delimited_by_null': True}})}
expressions = {}

# END OF FILE
