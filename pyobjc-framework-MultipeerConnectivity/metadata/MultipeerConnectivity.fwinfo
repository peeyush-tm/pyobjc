// objective.metadata exceptions file, see its document
// for information on how to update this file.
{
 "definitions": {
  "classes": {
   "MCSession": {
    "methods": [
     {
      "args": {
       "1": {
        "callable": {
	 "arguments": {
	  "0": { "typestr": "^v" },
	  "1": { "typestr": "@" },
	  "2": { "typestr": "@" }
	 },
	 "retval": { "typestr": "v" }
	}
       }
      },
      "class_method": false,
      "selector": "nearbyConnectionDataForPeer:withCompletionHandler:"
     },
     {
      "args": {
       "3": {
        "callable": {
	 "arguments": {
	  "0": { "typestr": "^v" },
	  "1": { "typestr": "@" }
	 },
	 "retval": { "typestr": "v" }
	}
       }
      },
      "class_method": false,
      "selector": "sendResourceAtURL:withName:toPeer:withCompletionHandler:"
     },
     {
      "args": {
       "3": { "type_modifier": "o" }
      },
      "class_method": false,
      "selector": "sendData:toPeers:withMode:error:"
     },
     {
      "args": {
       "2": { "type_modifier": "o" }
      },
      "class_method": false,
      "selector": "startStreamWithName:toPeer:error:"
     }
    ]
   },
   "NSObject": {
    "methods": [
     {
      "args": {
       "3": {
        "type_override": "@?",
        "callable": {
	 "arguments": {
	  "0": { "typestr": "^v" },
	  "1": { "typestr": "Z" }
	 },
	 "retval": { "typestr": "v" }
	}
       }
      },
      "class_method": false,
      "selector": "session:didReceiveCertificate:fromPeer:certificateHandler:"
     },
     {
      "args": {
       "3": {
        "type_override": "@?",
        "callable": {
	 "arguments": {
	  "0": { "typestr": "^v" },
	  "1": { "typestr": "Z" },
	  "2": { "typestr": "@" }
	 },
	 "retval": { "typestr": "v" }
	}
       }
      },
      "class_method": false,
      "selector": "advertiser:didReceiveInvitationFromPeer:withContext:invitationHandler:"
     },
     {
      "args": {
       "2": { "type_override": "Q" }
      },
      "class_method": false,
      "selector": "session:peer:didChangeState:"
     }
    ]
   }
  },
  "formal_protocols": {},
  "functions": {},
  "informal_protocols": {}
 }
}
