# objective.metada exceptions file, see its document
# for information on how to update this file.
{
 "definitions": {
  "enum": {
   "EKErrorOSNotSupported": { "value": 30 },
   "EKErrorLast": { "value": 31 },
   "EKWeekdaySunday": { "value": 1 },
   "EKWeekdayMonday": { "value": 2 },
   "EKWeekdayTuesday": { "value": 3 },
   "EKWeekdayWednesday": { "value": 4 },
   "EKWeekdayThursday": { "value": 5 },
   "EKWeekdayFriday": { "value": 6 },
   "EKWeekdaySaturday": { "value": 7 },
   "EKParticipantScheduleStatusNone": { "value": 0 },
   "EKParticipantScheduleStatusPending": { "value": 1 },
   "EKParticipantScheduleStatusSent": { "value": 2 },
   "EKParticipantScheduleStatusDelivered": { "value": 3 },
   "EKParticipantScheduleStatusRecipientNotRecognized": { "value": 4 },
   "EKParticipantScheduleStatusNoPrivileges": { "value": 5 },
   "EKParticipantScheduleStatusDeliveryFailed": { "value": 6 },
   "EKParticipantScheduleStatusCannotDeliver": { "value": 7 },
   "EKParticipantScheduleStatusRecipientNotAllowed": { "value": 8 },
  },
  "expressions": {
   "DATE_COMPONENTS": { "ignore": true },
   "DATETIME_COMPONENTS": { "ignore": true }
  },
  "classes": {
   "EKCalendarItem": {
    "methods": [
     {
       "args": {},
       "retval": { "type": "Z" },
       "class_method": false,
       "selector": "isAllDay"
     }
    ]
   },
   "EKEventStore": {
    "methods": [
     {
       "args": {
         "1": {
	   "callable": {
	      "arguments": {
	        "0": {
	          "typestr": "^v"
		},
	        "1": {
	          "typestr": "Z"
		},
	        "2": {
	          "typestr": "@"
		}
	      },
	      "retval": {
	        "typestr": "v"
	      }
	   }
	 }
       },
       "class_method": false,
       "selector": "requestAccessToEntityType:completion:"
     },
     {
       "args": {
         "1": {
	   "callable": {
	      "arguments": {
	        "0": {
	          "typestr": "^v"
		},
	        "1": {
	          "typestr": "@"
		}
	      },
	      "retval": {
	        "typestr": "v"
	      }
	   }
	 }
       },
       "class_method": false,
       "selector": "fetchRemindersMatchingPredicate:completion:"
     },
     {
       "args": {
         "1": {
	   "callable": {
	      "arguments": {
	        "0": {
	          "typestr": "^v"
		},
	        "1": {
	          "typestr": "@"
		},
	        "2": {
	          "typestr": "o^B"
		}
	      },
	      "retval": {
	        "typestr": "v"
	      }
	   }
	 }
       },
       "class_method": false,
       "selector": "enumerateEventsMatchingPredicate:usingBlock:"
     },
     {
      "args": {
       "2": { "type_modifier": "o" }
      },
      "class_method": false,
      "selector": "saveCalendar:commit:error:"
     },
     {
      "args": {
       "2": { "type_modifier": "o" }
      },
      "class_method": false,
      "selector": "removeCalendar:commit:error:"
     },
     {
      "args": {
       "3": { "type_modifier": "o" }
      },
      "class_method": false,
      "selector": "saveEvent:span:commit:error:"
     },
     {
      "args": {
       "3": { "type_modifier": "o" }
      },
      "class_method": false,
      "selector": "removeEvent:span:commit:error:"
     },
     {
      "args": {
       "2": { "type_modifier": "o" }
      },
      "class_method": false,
      "selector": "saveReminder:commit:error:"
     },
     {
      "args": {
       "2": { "type_modifier": "o" }
      },
      "class_method": false,
      "selector": "removeReminder:commit:error:"
     },
     {
      "args": {
       "0": { "type_modifier": "o"}
      },
      "class_method": false,
      "selector": "commit:"
     }
    ]
   }
  },
  "formal_protocols": {},
  "functions": {},
  "informal_protocols": {}
 }
}
